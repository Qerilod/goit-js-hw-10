{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nconst imputTimer = document.querySelector('#datetime-picker');\nconst buttonTimer = document.querySelector('button');\nlet userSelectedDate = '';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topCenter',\n      });\n      buttonTimer.setAttribute('disabled', true);\n    } else {\n      buttonTimer.removeAttribute('disabled');\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\n\nflatpickr(imputTimer, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst dayTimer = document.querySelector('#data-days');\nconst hourTimer = document.querySelector('#data-hours');\nconst minTimer = document.querySelector('#data-minutes');\nconst secTimer = document.querySelector('#data-seconds');\nconst startButton = document.querySelector('#data-start');\nstartButton.addEventListener('click', () => {\n  const currentDate = new Date().getTime();\n  const selectedDate = new Date(\n    document.getElementById('datetime-picker').value\n  ).getTime();\n  setInterval(() => {\n    let diff = selectedDate - currentDate - 1000;\n    console.log(diff);\n    const timer = convertMs(diff);\n    dayTimer.textContent = `${timer.days}`;\n    hourTimer.textContent = `${timer.hours}`;\n    minTimer.textContent = `${timer.minutes}`;\n    secTimer.textContent = `${timer.seconds}`;\n    currentDate += 1000;\n  }, 1000);\n});\nfunction addLeadingZero(value) {\n  return String(value).convertMs(2, '0');\n}\n"],"names":["imputTimer","buttonTimer","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","dayTimer","hourTimer","minTimer","secTimer","startButton","currentDate","selectedDate","diff","timer"],"mappings":"2GAIA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAc,SAAS,cAAc,QAAQ,EAG7CC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,GAAK,IAAI,MACzBC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,WAClB,CAAO,EACDH,EAAY,aAAa,WAAY,EAAI,IAEzCA,EAAY,gBAAgB,UAAU,EACnBE,EAAc,GAEpC,CACH,EAEAE,EAAUL,EAAYE,CAAO,EAE7B,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAW,SAAS,cAAc,eAAe,EACjDC,EAAW,SAAS,cAAc,eAAe,EACjDC,EAAc,SAAS,cAAc,aAAa,EACxDA,EAAY,iBAAiB,QAAS,IAAM,CAC1C,MAAMC,EAAc,IAAI,KAAM,EAAC,QAAO,EAChCC,EAAe,IAAI,KACvB,SAAS,eAAe,iBAAiB,EAAE,KAC5C,EAAC,QAAO,EACT,YAAY,IAAM,CAChB,IAAIC,EAAOD,EAAeD,EAAc,IACxC,QAAQ,IAAIE,CAAI,EAChB,MAAMC,EAAQd,EAAUa,CAAI,EAC5BP,EAAS,YAAc,GAAGQ,EAAM,OAChCP,EAAU,YAAc,GAAGO,EAAM,QACjCN,EAAS,YAAc,GAAGM,EAAM,UAChCL,EAAS,YAAc,GAAGK,EAAM,UAChCH,GAAe,GAChB,EAAE,GAAI,CACT,CAAC"}